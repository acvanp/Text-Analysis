tdm <- TermDocumentMatrix(docs) %>%
as.matrix()
colnames(tdm) = c("Zarathustra", "DBZ")
# remove words by rownames of tdm
tdm = tdm[ ! rownames(tdm) %in% c("-", "chapter", "iii", "applause","âve", "ât", "âll", "âm", "âd", "âre", "âs"),]
tdm = tdm[which(nchar(rownames(tdm)) > 1), ]
findFreqTerms(TermDocumentMatrix(docs), lowfreq = 30)
par(mfrow=c(1,1))
#par(mar=c(2,2,2,2))
comparison.cloud(tdm, random.order=FALSE, colors = c("black","darkorange"),
title.size=1.5, max.words=400)
# Alex Van Plantinga
# 5/16/2020
# use of gutenbergr to compare
# 3 big Continental Rationalists
# Descartes, Leibniz, Spinoza
# vs. 3 big British Empiricists
# Locke, Berkeley, Hume
# Inspired by ....
# https://www.tidytextmining.com/tidytext.html
# https://books.psychstat.org/textmining/association-of-words.html
# https://www.tidytextmining.com/nasa.html
library(dplyr)
library(tidytext)
data(stop_words)
library(dplyr)
library(stringr)
library(ggplot2)
library(gutenbergr)
gutenberg_metadata[which(startsWith(gutenberg_metadata$author, "Kant") ),]
#5684 Metaphysical Elements of Ethics
gutenberg_metadata[which(startsWith(gutenberg_metadata$author, "Nietzsche") ),]
# 4363 Beyond Good and Evil
gutenberg_metadata[which(startsWith(gutenberg_metadata$author, "Locke, John") ),]
# 7370 Second Treatise on Government
kant = gutenberg_download(5684)
nietzsche = gutenberg_download(4363)
locke = gutenberg_download(7370)
tidy_kant = kant %>%
unnest_tokens(word, text) %>%
anti_join(stop_words)
tidy_nietzsche = nietzsche %>%
unnest_tokens(word, text) %>%
anti_join(stop_words)
tidy_locke = locke %>%
unnest_tokens(word, text) %>%
anti_join(stop_words)
library(tidyr)
frequency <- bind_rows(mutate(tidy_kant, author = "Kant"),
mutate(tidy_nietzsche, author = " Nietzsche "),
mutate(tidy_locke, author = "Locke")) %>%
mutate(word = str_extract(word, "[a-z']+")) %>%
count(author, word) %>%
group_by(author) %>%
mutate(proportion = n / sum(n)) %>%
select(-n) %>%
spread(author, proportion) %>%
gather(author, proportion, `Kant`:` Nietzsche `)
library(scales)
# expect a warning about rows with missing values being removed
ggplot(frequency, aes(x = proportion, y = `Locke`, color = abs(`Locke` - proportion))) +
geom_abline(color = "gray40", lty = 2) +
geom_jitter(alpha = 0.1, size = 2.5, width = 0.3, height = 0.3) +
geom_text(aes(label = word), check_overlap = TRUE, vjust = 1.5) +
scale_x_log10(labels = percent_format()) +
scale_y_log10(labels = percent_format()) +
scale_color_gradient(limits = c(0, 0.001), low = "darkslategray4", high = "gray75") +
facet_wrap(~author, ncol = 2) +
theme(legend.position="none") +
labs(y = "Locke", x = NULL)
library(tm)
library(tm)
tm_map(kant, removeWords, c("ii"))
kant = gutenberg_download(5684)
tidy_kant = kant %>%
unnest_tokens(word, text) %>%
anti_join(stop_words)
tm_map(tidy_kant, removeWords, c("ii"))
removeWords
View(tidy_kant)
# remove non-words
tidy_kant = tidy_kant[whihch(! tidy_kant$word %in% c("ii"))]
# remove non-words
tidy_kant = tidy_kant[which(! tidy_kant$word %in% c("ii"))]
# remove non-words
tidy_kant = tidy_kant[which(! tidy_kant$word %in% c("ii")),]
kant = gutenberg_download(5684)
nietzsche = gutenberg_download(4363)
locke = gutenberg_download(7370)
tidy_kant = kant %>%
unnest_tokens(word, text) %>%
anti_join(stop_words)
# remove non-words
tidy_kant = tidy_kant[which(! tidy_kant$word %in% c("ii")),]
tidy_nietzsche = nietzsche %>%
unnest_tokens(word, text) %>%
anti_join(stop_words)
tidy_locke = locke %>%
unnest_tokens(word, text) %>%
anti_join(stop_words) %>%
remove_wor
library(tidyr)
frequency <- bind_rows(mutate(tidy_kant, author = "Kant"),
mutate(tidy_nietzsche, author = " Nietzsche "),
mutate(tidy_locke, author = "Locke")) %>%
mutate(word = str_extract(word, "[a-z']+")) %>%
count(author, word) %>%
group_by(author) %>%
mutate(proportion = n / sum(n)) %>%
select(-n) %>%
spread(author, proportion) %>%
gather(author, proportion, `Kant`:` Nietzsche `)
library(scales)
# expect a warning about rows with missing values being removed
ggplot(frequency, aes(x = proportion, y = `Locke`, color = abs(`Locke` - proportion))) +
geom_abline(color = "gray40", lty = 2) +
geom_jitter(alpha = 0.1, size = 2.5, width = 0.3, height = 0.3) +
geom_text(aes(label = word), check_overlap = TRUE, vjust = 1.5) +
scale_x_log10(labels = percent_format()) +
scale_y_log10(labels = percent_format()) +
scale_color_gradient(limits = c(0, 0.001), low = "darkslategray4", high = "gray75") +
facet_wrap(~author, ncol = 2) +
theme(legend.position="none") +
labs(y = "Locke", x = NULL)
# expect a warning about rows with missing values being removed
ggplot(frequency, aes(x = proportion, y = `Locke`, color = abs(`Locke` - proportion))) +
geom_abline(color = "gray40", lty = 2) +
geom_jitter(alpha = 0.1, size = 2.5, width = 0.3, height = 0.3) +
geom_text(aes(label = word), check_overlap = TRUE, vjust = 1.5) +
scale_x_log10(labels = percent_format()) +
scale_y_log10(labels = percent_format()) +
scale_color_gradient(limits = c(0, 0.001), low = "darkslategray4", high = "gray75") +
facet_wrap(~author, ncol = 2) +
theme(legend.position="none") +
labs(y = "Locke", x = NULL, cex = 2)
# expect a warning about rows with missing values being removed
ggplot(frequency, aes(x = proportion, y = `Locke`, color = abs(`Locke` - proportion))) +
geom_abline(color = "gray40", lty = 2) +
geom_jitter(alpha = 0.1, size = 2.5, width = 0.3, height = 0.3) +
geom_text(aes(label = word), check_overlap = TRUE, vjust = 1.5) +
scale_x_log10(labels = percent_format()) +
scale_y_log10(labels = percent_format()) +
scale_color_gradient(limits = c(0, 0.001), low = "darkslategray4", high = "gray75") +
facet_wrap(~author, ncol = 2) +
theme(legend.position="none") +
labs(y = "Locke", x = NULL, size = 2)
# expect a warning about rows with missing values being removed
ggplot(frequency, aes(x = proportion, y = `Locke`, color = abs(`Locke` - proportion))) +
geom_abline(color = "gray40", lty = 2) +
geom_jitter(alpha = 0.1, size = 2.5, width = 0.3, height = 0.3) +
geom_text(aes(label = word), check_overlap = TRUE, vjust = 1.5) +
scale_x_log10(labels = percent_format()) +
scale_y_log10(labels = percent_format()) +
scale_color_gradient(limits = c(0, 0.001), low = "darkslategray4", high = "gray75") +
facet_wrap(~author, ncol = 2) +
theme(legend.position="none", axis.title.y = element_text(size = 16)) +
labs(y = "Locke", x = NULL)
# expect a warning about rows with missing values being removed
ggplot(frequency, aes(x = proportion, y = `Locke`, color = abs(`Locke` - proportion))) +
geom_abline(color = "gray40", lty = 2) +
geom_jitter(alpha = 0.1, size = 2.5, width = 0.3, height = 0.3) +
geom_text(aes(label = word), check_overlap = TRUE, vjust = 10.5) +
scale_x_log10(labels = percent_format()) +
scale_y_log10(labels = percent_format()) +
scale_color_gradient(limits = c(0, 0.001), low = "darkslategray4", high = "gray75") +
facet_wrap(~author, ncol = 2) +
theme(legend.position="none", axis.title.y = element_text(size = 16)) +
labs(y = "Locke", x = NULL)
# expect a warning about rows with missing values being removed
ggplot(frequency, aes(x = proportion, y = `Locke`, color = abs(`Locke` - proportion))) +
geom_abline(color = "gray40", lty = 2) +
geom_jitter(alpha = 0.1, size = 2.5, width = 0.3, height = 0.3) +
geom_text(aes(label = word), check_overlap = TRUE, vjust = 0.5) +
scale_x_log10(labels = percent_format()) +
scale_y_log10(labels = percent_format()) +
scale_color_gradient(limits = c(0, 0.001), low = "darkslategray4", high = "gray75") +
facet_wrap(~author, ncol = 2) +
theme(legend.position="none", axis.title.y = element_text(size = 16)) +
labs(y = "Locke", x = NULL)
# expect a warning about rows with missing values being removed
ggplot(frequency, aes(x = proportion, y = `Locke`, color = abs(`Locke` - proportion))) +
geom_abline(color = "gray40", lty = 2) +
geom_jitter(alpha = 0.1, size = 2.5, width = 0.3, height = 0.3) +
geom_text(aes(label = word), check_overlap = TRUE, vjust = 0.5) +
scale_x_log10(labels = percent_format()) +
scale_y_log10(labels = percent_format()) +
scale_color_gradient(limits = c(0, 0.001), low = "darkslategray4", high = "gray75") +
facet_wrap(~author, ncol = 2) +
theme(legend.position="none", axis.title.y = element_text(size = 16), plot.title = element_text(size = 16)) +
labs(y = "Locke", x = NULL)
# expect a warning about rows with missing values being removed
ggplot(frequency, aes(x = proportion, y = `Locke`, color = abs(`Locke` - proportion))) +
geom_abline(color = "gray40", lty = 2) +
geom_jitter(alpha = 0.1, size = 2.5, width = 0.3, height = 0.3) +
geom_text(aes(label = word), check_overlap = TRUE, vjust = 0.5) +
scale_x_log10(labels = percent_format()) +
scale_y_log10(labels = percent_format()) +
scale_color_gradient(limits = c(0, 0.001), low = "darkslategray4", high = "gray75") +
facet_wrap(~author, ncol = 2) +
theme(legend.position="none", axis.title.y = element_text(size = 16)) +
labs(y = "Locke", x = NULL, plot.title = element_text(size = 26))
# expect a warning about rows with missing values being removed
ggplot(frequency, aes(x = proportion, y = `Locke`, color = abs(`Locke` - proportion))) +
geom_abline(color = "gray40", lty = 2) +
geom_jitter(alpha = 0.1, size = 2.5, width = 0.3, height = 0.3) +
geom_text(aes(label = word), check_overlap = TRUE, vjust = 0.5) +
scale_x_log10(labels = percent_format()) +
scale_y_log10(labels = percent_format()) +
scale_color_gradient(limits = c(0, 0.001), low = "darkslategray4", high = "gray75") +
facet_wrap(~author, ncol = 2) +
theme(legend.position="none", axis.title.y = element_text(size = 14)) +
labs(y = "Locke", x = NULL)
# expect a warning about rows with missing values being removed
ggplot(frequency, aes(x = proportion, y = `Locke`, color = abs(`Locke` - proportion)), plot.title = element_text(size = 16))) +
geom_abline(color = "gray40", lty = 2) +
geom_jitter(alpha = 0.1, size = 2.5, width = 0.3, height = 0.3) +
geom_text(aes(label = word), check_overlap = TRUE, vjust = 0.5) +
scale_x_log10(labels = percent_format()) +
scale_y_log10(labels = percent_format()) +
scale_color_gradient(limits = c(0, 0.001), low = "darkslategray4", high = "gray75") +
facet_wrap(~author, ncol = 2) +
theme(legend.position="none", axis.title.y = element_text(size = 14)) +
labs(y = "Locke", x = NULL)
# expect a warning about rows with missing values being removed
ggplot(frequency, aes(x = proportion, y = `Locke`, color = abs(`Locke` - proportion)), plot.title = element_text(size = 16)) +
geom_abline(color = "gray40", lty = 2) +
geom_jitter(alpha = 0.1, size = 2.5, width = 0.3, height = 0.3) +
geom_text(aes(label = word), check_overlap = TRUE, vjust = 0.5) +
scale_x_log10(labels = percent_format()) +
scale_y_log10(labels = percent_format()) +
scale_color_gradient(limits = c(0, 0.001), low = "darkslategray4", high = "gray75") +
facet_wrap(~author, ncol = 2) +
theme(legend.position="none", axis.title.y = element_text(size = 14)) +
labs(y = "Locke", x = NULL)
# expect a warning about rows with missing values being removed
ggplot(frequency, aes(x = proportion, y = `Locke`, color = abs(`Locke` - proportion))) +
geom_abline(color = "gray40", lty = 2) +
geom_jitter(alpha = 0.1, size = 2.5, width = 0.3, height = 0.9) +
geom_text(aes(label = word), check_overlap = TRUE, vjust = 0.5) +
scale_x_log10(labels = percent_format()) +
scale_y_log10(labels = percent_format()) +
scale_color_gradient(limits = c(0, 0.001), low = "darkslategray4", high = "gray75") +
facet_wrap(~author, ncol = 2) +
theme(legend.position="none", axis.title.y = element_text(size = 14)) +
labs(y = "Locke", x = NULL)
# expect a warning about rows with missing values being removed
ggplot(frequency, aes(x = proportion, y = `Locke`, color = abs(`Locke` - proportion))) +
geom_abline(color = "gray40", lty = 2) +
geom_jitter(alpha = 0.1, size = 2.5, width = 0.3, height = 0.1) +
geom_text(aes(label = word), check_overlap = TRUE, vjust = 0.5) +
scale_x_log10(labels = percent_format()) +
scale_y_log10(labels = percent_format()) +
scale_color_gradient(limits = c(0, 0.001), low = "darkslategray4", high = "gray75") +
facet_wrap(~author, ncol = 2) +
theme(legend.position="none", axis.title.y = element_text(size = 14)) +
labs(y = "Locke", x = NULL)
# expect a warning about rows with missing values being removed
ggplot(frequency, aes(x = proportion, y = `Locke`, color = abs(`Locke` - proportion))) +
geom_abline(color = "gray40", lty = 2) +
geom_jitter(alpha = 0.1, size = 2.5, width = 0.1, height = 0.3) +
geom_text(aes(label = word), check_overlap = TRUE, vjust = 0.5) +
scale_x_log10(labels = percent_format()) +
scale_y_log10(labels = percent_format()) +
scale_color_gradient(limits = c(0, 0.001), low = "darkslategray4", high = "gray75") +
facet_wrap(~author, ncol = 2) +
theme(legend.position="none", axis.title.y = element_text(size = 14)) +
labs(y = "Locke", x = NULL)
# expect a warning about rows with missing values being removed
ggplot(frequency, aes(x = proportion, y = `Locke`, color = abs(`Locke` - proportion))) +
geom_abline(color = "gray40", lty = 2) +
geom_jitter(alpha = 0.1, size = 2.5, width = 0.3, height = 0.3) +
geom_text(aes(label = word), check_overlap = TRUE, vjust = 0.5) +
scale_x_log10(labels = percent_format()) +
scale_y_log10(labels = percent_format()) +
scale_color_gradient(limits = c(0, 0.001), low = "darkslategray4", high = "gray75") +
facet_wrap(~author, ncol = 2) +
theme(legend.position="none", axis.title.y = element_text(size = 14)) +
labs(y = "Locke", x = NULL)
# expect a warning about rows with missing values being removed
ggplot(frequency, aes(x = proportion, y = `Locke`, color = abs(`Locke` - proportion))) +
geom_abline(color = "gray40", lty = 2) +
geom_jitter(alpha = 0.1, size = 2.5, width = 0.3, height = 0.3) +
geom_text(aes(label = word), check_overlap = TRUE, vjust = 0.5) +
scale_x_log10(labels = percent_format()) +
scale_y_log10(labels = percent_format()) +
scale_color_gradient(limits = c(0, 0.001), low = "darkslategray4", high = "gray75") +
facet_wrap(~author, ncol = 2) +
theme(legend.position="none", axis.title.x = element_text(size = 14), axis.title.y = element_text(size = 14)) +
labs(y = "Locke", x = NULL)
# expect a warning about rows with missing values being removed
ggplot(frequency, aes(x = proportion, y = `Locke`, color = abs(`Locke` - proportion))) +
geom_abline(color = "gray40", lty = 2) +
geom_jitter(alpha = 0.1, size = 2.5, width = 0.3, height = 0.3) +
geom_text(aes(label = word), check_overlap = TRUE, vjust = 0.5) +
scale_x_log10(labels = percent_format()) +
scale_y_log10(labels = percent_format()) +
scale_color_gradient(limits = c(0, 0.001), low = "darkslategray4", high = "gray75") +
facet_wrap(~author, ncol = 2) +
theme(legend.position="none", plot.title = element_text(size = 14)) +
labs(y = "Locke", x = NULL)
# expect a warning about rows with missing values being removed
ggplot(frequency, aes(x = proportion, y = `Locke`, color = abs(`Locke` - proportion))) +
geom_abline(color = "gray40", lty = 2) +
geom_jitter(alpha = 0.1, size = 2.5, width = 0.3, height = 0.3) +
geom_text(aes(label = word), check_overlap = TRUE, vjust = 0.5) +
scale_x_log10(labels = percent_format()) +
scale_y_log10(labels = percent_format()) +
scale_color_gradient(limits = c(0, 0.001), low = "darkslategray4", high = "gray75") +
facet_wrap(~author, ncol = 2) +
theme(legend.position="none", legend.title = element_text(size = 14), axis.title.y = element_text(size = 14)) +
labs(y = "Locke", x = NULL)
# expect a warning about rows with missing values being removed
ggplot(frequency, aes(x = proportion, y = `Locke`, color = abs(`Locke` - proportion))) +
geom_abline(color = "gray40", lty = 2) +
geom_jitter(alpha = 0.1, size = 2.5, width = 0.3, height = 0.3) +
geom_text(aes(label = word), check_overlap = TRUE, vjust = 0.5) +
scale_x_log10(labels = percent_format()) +
scale_y_log10(labels = percent_format()) +
scale_color_gradient(limits = c(0, 0.001), low = "darkslategray4", high = "gray75") +
facet_wrap(~author, ncol = 2) +
theme(legend.position="none", legend.text = element_text(size = 14), axis.title.y = element_text(size = 14)) +
labs(y = "Locke", x = NULL)
# expect a warning about rows with missing values being removed
ggplot(frequency, aes(x = proportion, y = `Locke`, color = abs(`Locke` - proportion))) +
geom_abline(color = "gray40", lty = 2) +
geom_jitter(alpha = 0.1, size = 2.5, width = 0.3, height = 0.3) +
geom_text(aes(label = word), check_overlap = TRUE, vjust = 0.5) +
scale_x_log10(labels = percent_format()) +
scale_y_log10(labels = percent_format()) +
scale_color_gradient(limits = c(0, 0.001), low = "darkslategray4", high = "gray75") +
facet_wrap(~author, ncol = 2) +
theme(legend.position="none", plot.title = element_text(size = 12, face = "bold"), axis.title.y = element_text(size = 14)) +
labs(y = "Locke", x = NULL)
View(frequency)
# expect a warning about rows with missing values being removed
ggplot(frequency, aes(x = proportion, y = `Locke`, color = abs(`Locke` - proportion))) +
geom_abline(color = "gray40", lty = 2) +
geom_jitter(alpha = 0.1, size = 2.5, width = 0.3, height = 0.3) +
geom_text(aes(label = word), check_overlap = TRUE, vjust = 0.5) +
scale_x_log10(labels = percent_format()) +
scale_y_log10(labels = percent_format()) +
scale_color_gradient(limits = c(0, 0.001), low = "darkslategray4", high = "gray75") +
facet_wrap(~author, ncol = 2) +
theme(legend.position="none", axis.title.x = element_text(size = 14)) +
labs(y = "Locke", x = NULL)
# expect a warning about rows with missing values being removed
ggplot(frequency, aes(x = proportion, y = `Locke`, color = abs(`Locke` - proportion))) +
geom_abline(color = "gray40", lty = 2) +
geom_jitter(alpha = 0.1, size = 2.5, width = 0.3, height = 0.3) +
geom_text(aes(label = word), check_overlap = TRUE, vjust = 0.5) +
scale_x_log10(labels = percent_format()) +
scale_y_log10(labels = percent_format()) +
scale_color_gradient(limits = c(0, 0.001), low = "darkslategray4", high = "gray75") +
facet_wrap(~author, ncol = 2) +
theme(legend.position="none", plot.title = element_text(size = 14)) +
labs(y = "Locke", x = NULL)
# expect a warning about rows with missing values being removed
ggplot(frequency, aes(x = proportion, y = `Locke`, color = abs(`Locke` - proportion))) +
geom_abline(color = "gray40", lty = 2) +
geom_jitter(alpha = 0.1, size = 2.5, width = 0.3, height = 0.3) +
geom_text(aes(label = word), check_overlap = TRUE, vjust = 0.5) +
scale_x_log10(labels = percent_format()) +
scale_y_log10(labels = percent_format()) +
scale_color_gradient(limits = c(0, 0.001), low = "darkslategray4", high = "gray75") +
facet_wrap(~author, ncol = 2) +
theme(legend.position="none", plot.subtitle = element_text(size = 14)) +
labs(y = "Locke", x = NULL)
# expect a warning about rows with missing values being removed
ggplot(frequency, aes(x = proportion, y = `Locke`, color = abs(`Locke` - proportion))) +
geom_abline(color = "gray40", lty = 2) +
geom_jitter(alpha = 0.1, size = 2.5, width = 0.3, height = 0.3) +
geom_text(aes(label = word), check_overlap = TRUE, vjust = 0.5) +
scale_x_log10(labels = percent_format()) +
scale_y_log10(labels = percent_format()) +
scale_color_gradient(limits = c(0, 0.001), low = "darkslategray4", high = "gray75") +
facet_wrap(~author, ncol = 2) +
theme(legend.position="none", plot.caption  = element_text(size = 14)) +
labs(y = "Locke", x = NULL)
# expect a warning about rows with missing values being removed
ggplot(frequency, aes(x = proportion, y = `Locke`, color = abs(`Locke` - proportion))) +
geom_abline(color = "gray40", lty = 2) +
geom_jitter(alpha = 0.1, size = 2.5, width = 0.3, height = 0.3) +
geom_text(aes(label = word), check_overlap = TRUE, vjust = 0.5) +
scale_x_log10(labels = percent_format()) +
scale_y_log10(labels = percent_format()) +
scale_color_gradient(limits = c(0, 0.001), low = "darkslategray4", high = "gray75") +
facet_wrap(~author, ncol = 2) +
theme(legend.position="none", plot.tag   = element_text(size = 14)) +
labs(y = "Locke", x = NULL)
# expect a warning about rows with missing values being removed
ggplot(frequency, aes(x = proportion, y = `Locke`, color = abs(`Locke` - proportion))) +
geom_abline(color = "gray40", lty = 2) +
geom_jitter(alpha = 0.1, size = 2.5, width = 0.3, height = 0.3) +
geom_text(aes(label = word), check_overlap = TRUE, vjust = 0.5) +
scale_x_log10(labels = percent_format()) +
scale_y_log10(labels = percent_format()) +
scale_color_gradient(limits = c(0, 0.001), low = "darkslategray4", high = "gray75") +
facet_wrap(~author, ncol = 2) +
theme(legend.position="none", axis.title.x.top = element_text(size = 14)) +
labs(y = "Locke", x = NULL)
# expect a warning about rows with missing values being removed
ggplot(frequency, aes(x = proportion, y = `Locke`, color = abs(`Locke` - proportion))) +
geom_abline(color = "gray40", lty = 2) +
geom_jitter(alpha = 0.1, size = 2.5, width = 0.3, height = 0.3) +
geom_text(aes(label = word), check_overlap = TRUE, vjust = 0.5) +
scale_x_log10(labels = percent_format()) +
scale_y_log10(labels = percent_format()) +
scale_color_gradient(limits = c(0, 0.001), low = "darkslategray4", high = "gray75") +
facet_wrap(~author, ncol = 2) +
theme(legend.position="none", axis.title.y = element_text(size = 14)) +
labs(y = "Locke", x = NULL)
# expect a warning about rows with missing values being removed
ggplot(frequency, aes(x = proportion, y = `Locke`, color = abs(`Locke` - proportion))) +
geom_abline(color = "gray40", lty = 2) +
geom_jitter(alpha = 0.1, size = 2.5, width = 0.3, height = 0.3) +
geom_text(aes(label = word), check_overlap = TRUE, vjust = 0.5) +
scale_x_log10(labels = percent_format()) +
scale_y_log10(labels = percent_format()) +
scale_color_gradient(limits = c(0, 0.001), low = "darkslategray4", high = "gray75") +
facet_wrap(~author, ncol = 2) +
theme(legend.position="none", axis.title.x.bottom  = element_text(size = 14)) +
labs(y = "Locke", x = NULL)
# expect a warning about rows with missing values being removed
ggplot(frequency, aes(x = proportion, y = `Locke`, color = abs(`Locke` - proportion))) +
geom_abline(color = "gray40", lty = 2) +
geom_jitter(alpha = 0.1, size = 2.5, width = 0.3, height = 0.3) +
geom_text(aes(label = word), check_overlap = TRUE, vjust = 0.5) +
scale_x_log10(labels = percent_format()) +
scale_y_log10(labels = percent_format()) +
scale_color_gradient(limits = c(0, 0.001), low = "darkslategray4", high = "gray75") +
facet_wrap(~author, ncol = 2) +
theme(legend.position="none", axis.text.x.top = element_text(size = 14)) +
labs(y = "Locke", x = NULL)
# expect a warning about rows with missing values being removed
ggplot(frequency, aes(x = proportion, y = `Locke`, color = abs(`Locke` - proportion))) +
geom_abline(color = "gray40", lty = 2) +
geom_jitter(alpha = 0.1, size = 2.5, width = 0.3, height = 0.3) +
geom_text(aes(label = word), check_overlap = TRUE, vjust = 0.5) +
scale_x_log10(labels = percent_format()) +
scale_y_log10(labels = percent_format()) +
scale_color_gradient(limits = c(0, 0.001), low = "darkslategray4", high = "gray75") +
facet_wrap(~author, ncol = 2) +
theme(legend.position="none") +
labs(y = "Locke", x = NULL)
# expect a warning about rows with missing values being removed
ggplot(frequency, aes(x = proportion, y = `Locke`, color = abs(`Locke` - proportion))) +
geom_abline(color = "gray40", lty = 2) +
geom_jitter(alpha = 0.1, size = 2.5, width = 0.3, height = 0.3) +
geom_text(aes(label = word), check_overlap = TRUE, vjust = 0.5) +
scale_x_log10(labels = percent_format()) +
scale_y_log10(labels = percent_format()) +
scale_color_gradient(limits = c(0, 0.001), low = "darkslategray4", high = "gray75") +
facet_wrap(~author, ncol = 2) +
theme(legend.position="none")+ theme_bw(base_size=16) +
labs(y = "Locke", x = NULL)
# expect a warning about rows with missing values being removed
ggplot(frequency, aes(x = proportion, y = `Locke`, color = abs(`Locke` - proportion))) +
geom_abline(color = "gray40", lty = 2) +
geom_jitter(alpha = 0.1, size = 2.5, width = 0.3, height = 0.3) +
geom_text(aes(label = word), check_overlap = TRUE, vjust = 0.5) +
scale_x_log10(labels = percent_format()) +
scale_y_log10(labels = percent_format()) +
scale_color_gradient(limits = c(0, 0.001), low = "darkslategray4", high = "gray75") +
facet_wrap(~author, ncol = 2) +
theme_bw(base_size=16) +
labs(y = "Locke", x = NULL)
# expect a warning about rows with missing values being removed
ggplot(frequency, aes(x = proportion, y = `Locke`, color = abs(`Locke` - proportion))) +
geom_abline(color = "gray40", lty = 2) +
geom_jitter(alpha = 0.1, size = 2.5, width = 0.3, height = 0.3) +
geom_text(aes(label = word), check_overlap = TRUE, vjust = 0.5) +
scale_x_log10(labels = percent_format()) +
scale_y_log10(labels = percent_format()) +
scale_color_gradient(limits = c(0, 0.001), low = "darkslategray4", high = "gray75") +
facet_wrap(~author, ncol = 2) +
theme_bw(base_size=16, legend.position="none") +
labs(y = "Locke", x = NULL)
# expect a warning about rows with missing values being removed
ggplot(frequency, aes(x = proportion, y = `Locke`, color = abs(`Locke` - proportion))) +
geom_abline(color = "gray40", lty = 2) +
geom_jitter(alpha = 0.1, size = 2.5, width = 0.3, height = 0.3) +
geom_text(aes(label = word), check_overlap = TRUE, vjust = 0.5) +
scale_x_log10(labels = percent_format()) +
scale_y_log10(labels = percent_format()) +
scale_color_gradient(limits = c(0, 0.001), low = "darkslategray4", high = "gray75") +
facet_wrap(~author, ncol = 2) +
theme_bw(base_size=16) + theme(legend.position="none")+
labs(y = "Locke", x = NULL)
# expect a warning about rows with missing values being removed
ggplot(frequency, aes(x = proportion, y = `Locke`, color = abs(`Locke` - proportion))) +
geom_abline(color = "gray40", lty = 2) +
geom_jitter(alpha = 0.1, size = 2.5, width = 0.3, height = 0.3) +
geom_text(aes(label = word), check_overlap = TRUE, vjust = 0.5) +
scale_x_log10(labels = percent_format()) +
scale_y_log10(labels = percent_format()) +
scale_color_gradient(limits = c(0, 0.001), low = "darkslategray4", high = "gray75") +
facet_wrap(~author, ncol = 2) +
theme_bw(base_size=16) +
#theme(legend.position="none")+
labs(y = "Locke", x = NULL)
# expect a warning about rows with missing values being removed
ggplot(frequency, aes(x = proportion, y = `Locke`, color = abs(`Locke` - proportion))) +
geom_abline(color = "gray40", lty = 2) +
geom_jitter(alpha = 0.1, size = 2.5, width = 0.3, height = 0.3) +
geom_text(aes(label = word), check_overlap = TRUE, vjust = 0.5) +
scale_x_log10(labels = percent_format()) +
scale_y_log10(labels = percent_format()) +
scale_color_gradient(limits = c(0, 0.001), low = "darkslategray4", high = "gray75") +
facet_wrap(~author, ncol = 2) +
theme_bw(base_size=16) +
theme(legend.position="none")+
labs(y = "Locke", x = NULL)
